/*! For license information please see main.476402820254bd9a7424.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Preloader.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l}),Object(function(){var e=new Error("Cannot find module 'ogl'");throw e.code="MODULE_NOT_FOUND",e}());var s=n("./node_modules/gsap/index.js"),o=n("./app/classes/Component.js"),a=n("./node_modules/lodash/each.js"),i=n.n(a),r=n("./app/utils/text.js");class l extends o.default{constructor({canvas:e}){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text"}}),this.canvas=e,window.TEXTURES={},(0,r.split)({element:this.elements.title,expression:"<br>"}),(0,r.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){i()(window.ASSETS,(e=>{const t=new Object(function(){var e=new Error("Cannot find module 'ogl'");throw e.code="MODULE_NOT_FOUND",e}())(this.canvas.gl,{generateMipmaps:!1}),n=new window.Image;n.crossOrigin="anonymous",n.src=e,n.onload=e=>{t.image=n,this.onAssetLoaded()},window.TEXTURES[e]=t}))}onAssetLoaded(e){this.length++;const t=this.length/window.ASSETS.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.emit("completed"),this.animateOut=s.default.timeline({delay:1}),this.animateOut.to(this.elements.titleSpans,{duration:1.5,ease:"expo.out",stagger:.1,y:"150%"}),this.animateOut.to(this.elements.numberText,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"},"-=1.4"),this.animateOut.to(this.element,{autoAlpha:0,duration:1.5}),this.animateOut.call((e=>{this.destroy()}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"1b18188b969bb9c207a4"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi40NzY0MDI4MjAyNTRiZDlhNzQyNC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Z1hBWWUsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3JDQyxhQUFZLE9BQUVDLElBQ1pDLE1BQU0sQ0FDSkMsUUFBUyxhQUNUQyxTQUFVLENBQ1JDLE1BQU8sbUJBQ1BDLE9BQVEscUJBQ1JDLFdBQVksOEJBSWhCQyxLQUFLUCxPQUFTQSxFQUVkUSxPQUFPQyxTQUFXLElBRWxCQyxFQUFBQSxFQUFBQSxPQUFNLENBQ0pSLFFBQVNLLEtBQUtKLFNBQVNDLE1BQ3ZCTyxXQUFZLFVBR2RELEVBQUFBLEVBQUFBLE9BQU0sQ0FDSlIsUUFBU0ssS0FBS0osU0FBU0MsTUFDdkJPLFdBQVksU0FHZEosS0FBS0osU0FBU1MsV0FDWkwsS0FBS0osU0FBU0MsTUFBTVMsaUJBQWlCLGFBRXZDTixLQUFLTyxPQUFTLEVBRWRQLEtBQUtRLGVBR1BBLGVBQ0VDLEdBQUFBLENBQUtSLE9BQU9TLFFBQVNDLElBQ25CLE1BQU1DLEVBQVUsSUFBSUMsT0FBQUEsV0FBQUEsSUFBQUEsRUFBQUEsSUFBQUEsTUFBQUEsNEJBQUFBLE1BQUFBLEVBQUFBLEtBQUFBLG1CQUFBQSxFQUFBQSxHQUFKLENBQVliLEtBQUtQLE9BQU9xQixHQUFJLENBQzFDQyxpQkFBaUIsSUFHYkMsRUFBUSxJQUFJZixPQUFPZ0IsTUFFekJELEVBQU1FLFlBQWMsWUFDcEJGLEVBQU1HLElBQU1SLEVBRVpLLEVBQU1JLE9BQVVDLElBQ2RULEVBQVFELE1BQVFLLEVBRWhCaEIsS0FBS3NCLGlCQUdQckIsT0FBT0MsU0FBU1MsR0FBU0MsS0FJN0JVLGNBQWNYLEdBQ1pYLEtBQUtPLFNBRUwsTUFBTWdCLEVBQVV2QixLQUFLTyxPQUFTTixPQUFPUyxPQUFPSCxPQUU1Q1AsS0FBS0osU0FBU0csV0FBV3lCLFVBQWEsR0FBRUMsS0FBS0MsTUFBZ0IsSUFBVkgsTUFFbkMsSUFBWkEsR0FDRnZCLEtBQUsyQixXQUlUQSxXQUNFLE9BQU8sSUFBSUMsU0FBU0MsSUFDbEI3QixLQUFLOEIsS0FBSyxhQUVWOUIsS0FBSytCLFdBQWFDLEVBQUFBLFFBQUFBLFNBQWMsQ0FDOUJDLE1BQU8sSUFHVGpDLEtBQUsrQixXQUFXRyxHQUFHbEMsS0FBS0osU0FBU1MsV0FBWSxDQUMzQzhCLFNBQVUsSUFDVkMsS0FBTSxXQUNOQyxRQUFTLEdBQ1RDLEVBQUcsU0FHTHRDLEtBQUsrQixXQUFXRyxHQUNkbEMsS0FBS0osU0FBU0csV0FDZCxDQUNFb0MsU0FBVSxJQUNWQyxLQUFNLFdBQ05DLFFBQVMsR0FDVEMsRUFBRyxRQUVMLFNBR0Z0QyxLQUFLK0IsV0FBV0csR0FBR2xDLEtBQUtMLFFBQVMsQ0FDL0I0QyxVQUFXLEVBQ1hKLFNBQVUsTUFHWm5DLEtBQUsrQixXQUFXUyxNQUFNbkIsSUFDcEJyQixLQUFLeUMsZ0JBS1hBLFVBQ0V6QyxLQUFLTCxRQUFRK0MsV0FBV0MsWUFBWTNDLEtBQUtMLDBCQ3BIN0NpRCxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvUHJlbG9hZGVyLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG5pbXBvcnQgeyBUZXh0dXJlIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCc7XG5cbmltcG9ydCBDb21wb25lbnQgZnJvbSAnY2xhc3Nlcy9Db21wb25lbnQnO1xuXG5pbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCc7XG5cbmltcG9ydCB7IHNwbGl0IH0gZnJvbSAndXRpbHMvdGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHsgY2FudmFzIH0pIHtcbiAgICBzdXBlcih7XG4gICAgICBlbGVtZW50OiAnLnByZWxvYWRlcicsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICB0aXRsZTogJy5wcmVsb2FkZXJfX3RleHQnLFxuICAgICAgICBudW1iZXI6ICcucHJlbG9hZGVyX19udW1iZXInLFxuICAgICAgICBudW1iZXJUZXh0OiAnLnByZWxvYWRlcl9fbnVtYmVyX190ZXh0JyxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcblxuICAgIHdpbmRvdy5URVhUVVJFUyA9IHt9O1xuXG4gICAgc3BsaXQoe1xuICAgICAgZWxlbWVudDogdGhpcy5lbGVtZW50cy50aXRsZSxcbiAgICAgIGV4cHJlc3Npb246ICc8YnI+JyxcbiAgICB9KTtcblxuICAgIHNwbGl0KHtcbiAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudHMudGl0bGUsXG4gICAgICBleHByZXNzaW9uOiAnPGJyPicsXG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnRzLnRpdGxlU3BhbnMgPVxuICAgICAgdGhpcy5lbGVtZW50cy50aXRsZS5xdWVyeVNlbGVjdG9yQWxsKCdzcGFuIHNwYW4nKTtcblxuICAgIHRoaXMubGVuZ3RoID0gMDtcblxuICAgIHRoaXMuY3JlYXRlTG9hZGVyKCk7XG4gIH1cblxuICBjcmVhdGVMb2FkZXIoKSB7XG4gICAgZWFjaCh3aW5kb3cuQVNTRVRTLCAoaW1hZ2UpID0+IHtcbiAgICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmNhbnZhcy5nbCwge1xuICAgICAgICBnZW5lcmF0ZU1pcG1hcHM6IGZhbHNlLFxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IG1lZGlhID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xuXG4gICAgICBtZWRpYS5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnO1xuICAgICAgbWVkaWEuc3JjID0gaW1hZ2U7XG5cbiAgICAgIG1lZGlhLm9ubG9hZCA9IChfKSA9PiB7XG4gICAgICAgIHRleHR1cmUuaW1hZ2UgPSBtZWRpYTtcblxuICAgICAgICB0aGlzLm9uQXNzZXRMb2FkZWQoKTtcbiAgICAgIH07XG5cbiAgICAgIHdpbmRvdy5URVhUVVJFU1tpbWFnZV0gPSB0ZXh0dXJlO1xuICAgIH0pO1xuICB9XG5cbiAgb25Bc3NldExvYWRlZChpbWFnZSkge1xuICAgIHRoaXMubGVuZ3RoKys7XG5cbiAgICBjb25zdCBwZXJjZW50ID0gdGhpcy5sZW5ndGggLyB3aW5kb3cuQVNTRVRTLmxlbmd0aDtcblxuICAgIHRoaXMuZWxlbWVudHMubnVtYmVyVGV4dC5pbm5lckhUTUwgPSBgJHtNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApfSVgO1xuXG4gICAgaWYgKHBlcmNlbnQgPT09IDEpIHtcbiAgICAgIHRoaXMub25Mb2FkZWQoKTtcbiAgICB9XG4gIH1cblxuICBvbkxvYWRlZCgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHRoaXMuZW1pdCgnY29tcGxldGVkJyk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dCA9IEdTQVAudGltZWxpbmUoe1xuICAgICAgICBkZWxheTogMSxcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy50aXRsZVNwYW5zLCB7XG4gICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgIGVhc2U6ICdleHBvLm91dCcsXG4gICAgICAgIHN0YWdnZXI6IDAuMSxcbiAgICAgICAgeTogJzE1MCUnLFxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC50byhcbiAgICAgICAgdGhpcy5lbGVtZW50cy5udW1iZXJUZXh0LFxuICAgICAgICB7XG4gICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICBlYXNlOiAnZXhwby5vdXQnLFxuICAgICAgICAgIHN0YWdnZXI6IDAuMSxcbiAgICAgICAgICB5OiAnMTAwJScsXG4gICAgICAgIH0sXG4gICAgICAgICctPTEuNCdcbiAgICAgICk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC50byh0aGlzLmVsZW1lbnQsIHtcbiAgICAgICAgYXV0b0FscGhhOiAwLFxuICAgICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuYW5pbWF0ZU91dC5jYWxsKChfKSA9PiB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuZWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudCk7XG4gIH1cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIxYjE4MTg4Yjk2OWJiOWMyMDdhNFwiKSJdLCJuYW1lcyI6WyJQcmVsb2FkZXIiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsImNhbnZhcyIsInN1cGVyIiwiZWxlbWVudCIsImVsZW1lbnRzIiwidGl0bGUiLCJudW1iZXIiLCJudW1iZXJUZXh0IiwidGhpcyIsIndpbmRvdyIsIlRFWFRVUkVTIiwic3BsaXQiLCJleHByZXNzaW9uIiwidGl0bGVTcGFucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJjcmVhdGVMb2FkZXIiLCJlYWNoIiwiQVNTRVRTIiwiaW1hZ2UiLCJ0ZXh0dXJlIiwiVGV4dHVyZSIsImdsIiwiZ2VuZXJhdGVNaXBtYXBzIiwibWVkaWEiLCJJbWFnZSIsImNyb3NzT3JpZ2luIiwic3JjIiwib25sb2FkIiwiXyIsIm9uQXNzZXRMb2FkZWQiLCJwZXJjZW50IiwiaW5uZXJIVE1MIiwiTWF0aCIsInJvdW5kIiwib25Mb2FkZWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImVtaXQiLCJhbmltYXRlT3V0IiwiR1NBUCIsImRlbGF5IiwidG8iLCJkdXJhdGlvbiIsImVhc2UiLCJzdGFnZ2VyIiwieSIsImF1dG9BbHBoYSIsImNhbGwiLCJkZXN0cm95IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9